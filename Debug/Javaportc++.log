Der Buildvorgang wurde am 13.09.2015 02:58:07 gestartet.
     1>Projekt "C:\Users\Christian\Documents\GitHub\MyEngine\Javaportc++.vcxproj" auf Knoten "2", Build Ziel(e).
     1>C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\V140\Platforms\Win32\PlatformToolsets\v140_xp\Toolset.targets(36,5): warning MSB8003: Could not find WindowsSdkDir_71A variable from the registry.  TargetFrameworkVersion or PlatformToolset may be set to an invalid version number.
     1>C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\V140\Microsoft.CppBuild.targets(366,5): warning MSB8003: Could not find WindowsSDKDir variable from the registry.  TargetFrameworkVersion or PlatformToolset may be set to an invalid version number.
     1>ClCompile:
         D:\Visual\VC\bin\CL.exe /c /I"C:\Program Files (x86)\Microsoft Visual Studio 12.0\include" /IC:\Users\Christian\Documents\GitHub\MyEngine\dep\lib\debug /I"$SDK Path\Include" /IC:\Users\Christian\Documents\GitHub\MyEngine\dep\include\bullet /ZI /nologo /W3 /WX- /Od /Oy- /D WIN32 /D _DEBUG /D _CONSOLE /D _USING_V110_SDK71_ /D _UNICODE /D UNICODE /Gm /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc140.pdb" /Gd /TP /analyze- /errorReport:prompt Audio.cpp AudioListener.cpp Camera3d.cpp Component.cpp Engine.cpp Errors.cpp FBO.cpp InputManager.cpp Lighting.cpp LuaEngine.cpp main.cpp Maingame.cpp Material.cpp Math\3DMath.cpp Mesh.cpp MusicPlayer.cpp Observer.cpp ParticleSystem.cpp PhysicsEngine.cpp Picker.cpp Entity.cpp RenderUtil.cpp Scene.cpp ServiceLocator.cpp Shader.cpp Shadow.cpp Terrain.cpp Text.cpp Texture.cpp Time.cpp timing.cpp Transform.cpp UIrenderer.cpp Window.cpp
         Window.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         UIrenderer.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\text.h(145): warning C4244: "return": Konvertierung von "GLuint" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\uirenderer.cpp(40): warning C4804: ">": unsichere Verwendung des Typs "bool" in einer Operation
     1>c:\users\christian\documents\github\myengine\uirenderer.cpp(370): warning C4804: "<": unsichere Verwendung des Typs "bool" in einer Operation
     1>c:\users\christian\documents\github\myengine\uirenderer.cpp(376): warning C4804: "<": unsichere Verwendung des Typs "bool" in einer Operation
     1>c:\users\christian\documents\github\myengine\uirenderer.cpp(632): warning C4244: "Argument": Konvertierung von "Sint32" in "const float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\uirenderer.cpp(640): warning C4244: "Argument": Konvertierung von "Sint32" in "float", möglicher Datenverlust
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         Transform.cpp
         timing.cpp
     1>c:\users\christian\documents\github\myengine\timing.cpp(23): warning C4244: "Initialisierung": Konvertierung von "Uint32" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\timing.cpp(40): warning C4244: "Initialisierung": Konvertierung von "Uint32" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\timing.cpp(43): warning C4244: "Initialisierung": Konvertierung von "Uint32" in "float", möglicher Datenverlust
         Time.cpp
     1>c:\users\christian\documents\github\myengine\time.cpp(4): warning C4305: "Initialisierung": Verkürzung von "double" in "float"
         Texture.cpp
         Text.cpp
     1>c:\users\christian\documents\github\myengine\text.h(145): warning C4244: "return": Konvertierung von "GLuint" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\text.cpp(84): warning C4244: "Argument": Konvertierung von "unsigned int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\text.cpp(85): warning C4244: "Argument": Konvertierung von "FT_Int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\text.cpp(87): warning C4838: Konvertierung von "FT_Pos" zu "GLuint" erfordert eine einschränkende Konvertierung
         Terrain.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\terrain.cpp(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\terrain.cpp(77): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\terrain.cpp(81): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\terrain.cpp(91): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\terrain.cpp(95): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\terrain.cpp(117): warning C4244: "=": Konvertierung von "float" in "int", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\terrain.cpp(118): warning C4244: "=": Konvertierung von "float" in "int", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\terrain.cpp(119): warning C4244: "=": Konvertierung von "float" in "int", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\terrain.cpp(120): warning C4244: "=": Konvertierung von "float" in "int", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\terrain.cpp(152): warning C4244: "=": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\terrain.cpp(153): warning C4244: "=": Konvertierung von "int" in "float", möglicher Datenverlust
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         Shadow.cpp
         Shader.cpp
     1>c:\users\christian\documents\github\myengine\shader.cpp(213): warning C4244: "=": Konvertierung von "int" in "float", möglicher Datenverlust
         ServiceLocator.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\text.h(145): warning C4244: "return": Konvertierung von "GLuint" in "float", möglicher Datenverlust
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         Scene.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\text.h(145): warning C4244: "return": Konvertierung von "GLuint" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\scene.cpp(35): warning C4244: "Argument": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\scene.cpp(312): warning C4244: "Argument": Konvertierung von "double" in "float", möglicher Datenverlust
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         RenderUtil.cpp
         Entity.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\text.h(145): warning C4244: "return": Konvertierung von "GLuint" in "float", möglicher Datenverlust
         Macro definition of max detected - undefining
         Macro definition of min detected - undefining
     1>c:\users\christian\documents\github\myengine\entity.cpp(25): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\entity.cpp(36): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\entity.cpp(45): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\entity.cpp(59): warning C4018: "<=": Konflikt zwischen "signed" und "unsigned"
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         Picker.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\text.h(145): warning C4244: "return": Konvertierung von "GLuint" in "float", möglicher Datenverlust
         Macro definition of max detected - undefining
         Macro definition of min detected - undefining
     1>c:\users\christian\documents\github\myengine\picker.cpp(43): warning C4244: "Argument": Konvertierung von "unsigned int" in "const float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\picker.cpp(61): warning C4244: "+=": Konvertierung von "float" in "unsigned int", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\picker.cpp(90): warning C4244: "Argument": Konvertierung von "unsigned int" in "const float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\picker.cpp(111): warning C4244: "+=": Konvertierung von "float" in "unsigned int", möglicher Datenverlust
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         PhysicsEngine.cpp
         ParticleSystem.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         Observer.cpp
         MusicPlayer.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\text.h(145): warning C4244: "return": Konvertierung von "GLuint" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\musicplayer.cpp(51): warning C4018: ">=": Konflikt zwischen "signed" und "unsigned"
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         Mesh.cpp
     1>c:\users\christian\documents\github\myengine\mesh.cpp(139): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\mesh.cpp(142): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\mesh.cpp(178): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
         Code wird generiert...
         Kompilieren...
         3DMath.cpp
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(2): warning C4305: "Initialisierung": Verkürzung von "double" in "float"
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1776): warning C4244: "Argument": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1777): warning C4244: "Argument": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1778): warning C4244: "Argument": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1780): warning C4244: "Argument": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1781): warning C4244: "Argument": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1782): warning C4244: "Argument": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1795): warning C4244: "Argument": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1796): warning C4244: "Argument": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1797): warning C4244: "Argument": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1799): warning C4244: "Argument": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1800): warning C4244: "Argument": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1801): warning C4244: "Argument": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1971): warning C4244: "Initialisierung": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1972): warning C4244: "Initialisierung": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1973): warning C4244: "Initialisierung": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1974): warning C4244: "Initialisierung": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1975): warning C4244: "Initialisierung": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1976): warning C4244: "Initialisierung": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(1991): warning C4305: "Initialisierung": Verkürzung von "double" in "float"
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(2000): warning C4244: "=": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(2003): warning C4244: "=": Konvertierung von "double" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\math\3dmath.cpp(2005): warning C4244: "=": Konvertierung von "double" in "float", möglicher Datenverlust
         Material.cpp
         Maingame.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\text.h(145): warning C4244: "return": Konvertierung von "GLuint" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\maingame.cpp(36): warning C4244: "=": Konvertierung von "float" in "int", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\maingame.cpp(37): warning C4244: "=": Konvertierung von "float" in "int", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\maingame.cpp(89): warning C4244: "Argument": Konvertierung von "float" in "int", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\maingame.cpp(194): warning C4244: "Argument": Konvertierung von "long" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\maingame.cpp(196): warning C4244: "=": Konvertierung von "long" in "float", möglicher Datenverlust
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         main.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\text.h(145): warning C4244: "return": Konvertierung von "GLuint" in "float", möglicher Datenverlust
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         LuaEngine.cpp
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         Lighting.cpp
         InputManager.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\text.h(145): warning C4244: "return": Konvertierung von "GLuint" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\inputmanager.cpp(9): warning C4244: "Argument": Konvertierung von "Sint32" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\inputmanager.cpp(137): warning C4018: ">": Konflikt zwischen "signed" und "unsigned"
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         FBO.cpp
         Errors.cpp
         Engine.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\text.h(145): warning C4244: "return": Konvertierung von "GLuint" in "float", möglicher Datenverlust
         Macro definition of max detected - undefining
         Macro definition of min detected - undefining
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         Component.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\text.h(145): warning C4244: "return": Konvertierung von "GLuint" in "float", möglicher Datenverlust
         Macro definition of max detected - undefining
         Macro definition of min detected - undefining
     1>c:\users\christian\documents\github\myengine\component.cpp(152): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(156): warning C4244: "Argument": Konvertierung von "unsigned int" in "const float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\component.cpp(207): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(208): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(209): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(210): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(211): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(212): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(217): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(218): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(219): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(220): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(221): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(222): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(229): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(242): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(251): warning C4018: "<=": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(253): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(266): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(275): warning C4018: "<=": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(277): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(290): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(299): warning C4018: "<=": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(301): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(314): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(331): warning C4018: "<=": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(333): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>c:\users\christian\documents\github\myengine\component.cpp(347): warning C4018: "<": Konflikt zwischen "signed" und "unsigned"
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         Camera3d.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\camera3d.cpp(49): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         AudioListener.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>c:\users\christian\documents\github\myengine\text.h(145): warning C4244: "return": Konvertierung von "GLuint" in "float", möglicher Datenverlust
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         Audio.cpp
     1>c:\users\christian\documents\github\myengine\camera3d.h(70): warning C4244: "Argument": Konvertierung von "int" in "float", möglicher Datenverlust
     1>d:\visual\vc\include\type_traits(1494): error C2893: Funktionsvorlage "unknown-type std::invoke(_Callable &&,_Types &&...)" konnte nicht spezialisiert werden
         d:\visual\vc\include\type_traits(1494): note: Mit den folgenden Vorlagenargumenten:
         d:\visual\vc\include\type_traits(1494): note: "_Callable=_Decayed &"
         d:\visual\vc\include\type_traits(1494): note: "_Types={}"
         d:\visual\vc\include\functional(210): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Invoke_ret<_Rx,_Callable&>(std::_Forced<_Rx,true>,_Callable &)".
                 with
                 [
                     _Rx=void,
                     _Callable=_Decayed
                 ]
         d:\visual\vc\include\functional(208): note: Bei der Kompilierung der Klassen-template der "void std::_Func_impl<_Decayed,_Alloc,_Ret>::_Do_call(void)"-Memberfunktion
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(136): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Func_impl<_Decayed,_Alloc,_Ret>".
                 with
                 [
                     _Alloc=std::allocator<int>,
                     _Ret=void
                 ]
         d:\visual\vc\include\functional(339): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Klassen-template "std::_Is_large<_Myimpl>".
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(318): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset_alloc<_Ty,std::allocator<int>>(_Fx &&,const _Alloc &)".
                 with
                 [
                     _Ret=void,
                     _Ty=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>,
                     _Alloc=std::allocator<int>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         d:\visual\vc\include\functional(484): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "void std::_Func_class<_Ret>::_Reset<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx &&)".
                 with
                 [
                     _Ret=void,
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         c:\users\christian\documents\github\myengine\dep\include\selene\selector.h(38): note: Siehe Verweis auf die Instanziierung der gerade kompilierten Funktions-template "std::function<void (void)>::function<std::vector<sel::Selector::Fun,std::allocator<_Ty>>>(_Fx)".
                 with
                 [
                     _Ty=sel::Selector::Fun,
                     _Fx=std::vector<sel::Selector::Fun,std::allocator<sel::Selector::Fun>>
                 ]
         Code wird generiert...
     1>Die Erstellung des Projekts "C:\Users\Christian\Documents\GitHub\MyEngine\Javaportc++.vcxproj" ist abgeschlossen, Build Ziel(e) -- FEHLER.

Fehler beim Buildvorgang.

Verstrichene Zeit 00:00:37.12
